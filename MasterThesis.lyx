#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass apa6
\begin_preamble
\usepackage[american]{babel}
\usepackage{csquotes}
\usepackage[style=apa,natbib=true,backend=biber]{biblatex}
\DeclareLanguageMapping{american}{american-apa}
\addbibresource{/Users/jan/Studium/Masterarbeit/Thesis/MasterThesis.bib}
\end_preamble
\use_default_options true
\begin_modules
knitr
biblatex
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command biber
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine natbib_authoryear
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout ShortTitle
Recognition Memory
\end_layout

\begin_layout Title
Disentangling Cognitive Processes with Mathematical Modeling:
\emph on
 Evaluating Continuous and Discrete-State Models of Recognition Memory via
 Response-Scale and Encoding-Strength Manipulation
\end_layout

\begin_layout Author
Jan Vogt
\end_layout

\begin_layout Abstract
Abstract
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
...
\end_layout

\begin_layout Section
Theory
\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand citet
key "province_evidence_2012"

\end_inset

 are great! 
\begin_inset CommandInset citation
LatexCommand cite
key "broder_recognition_2009"

\end_inset


\end_layout

\begin_layout Section
Methods and Materials
\end_layout

\begin_layout Standard
...
\end_layout

\begin_layout Section
Results
\end_layout

\begin_layout Standard
...nnn
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<utilityFunctions, echo=FALSE, eval=TRUE>>=
\end_layout

\begin_layout Plain Layout

filter <- function(x, group){
\end_layout

\begin_layout Plain Layout

	groupName <- switch(group, vollenkodiert="vollenkodiert", teilenkodiert="teilen
kodiert") 
\end_layout

\begin_layout Plain Layout

#	sessionID <- switch(session, first=0, second=1) 
\end_layout

\begin_layout Plain Layout

#	x.ret <- x[x$group==groupName & x$session==sessionID,]
\end_layout

\begin_layout Plain Layout

	x.ret <- x[x$group==groupName,]
\end_layout

\begin_layout Plain Layout

	x.ret$resp <- factor(x.ret$resp, levels=if(group==1) 0:7  else  0:5)   
\end_layout

\begin_layout Plain Layout

	return(x.ret) 
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

probabilityDist = function(x){   
\end_layout

\begin_layout Plain Layout

x.freq <- table(x)   
\end_layout

\begin_layout Plain Layout

x.relfreq <- x.freq / length(x)   
\end_layout

\begin_layout Plain Layout

return(x.relfreq) }
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

emp.dists <- function(x){   
\end_layout

\begin_layout Plain Layout

cast.formula <- code+session+scale+enc+posold~result_variable   
\end_layout

\begin_layout Plain Layout

value.name <- "resp"
\end_layout

\begin_layout Plain Layout

ret.list <- list(cast(filter(x, 1), cast.formula, probabilityDist, value=value.name
), cast(filter(x, 2), cast.formula, probabilityDist, value=value.name)) 
\end_layout

\begin_layout Plain Layout

names(ret.list) <- c("fully encoded", "partly encoded")   
\end_layout

\begin_layout Plain Layout

ret.list <- lapply(ret.list, rename.and.melt, 1:5, value.name)
\end_layout

\begin_layout Plain Layout

ret.list <- lapply(ret.list, split.sessions)
\end_layout

\begin_layout Plain Layout

return(ret.list) 
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

split.sessions <- function(x){
\end_layout

\begin_layout Plain Layout

	return(list(words=x[x$session==0,], images=x[x$session==1,]))
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

rename.and.melt <- function(x, melt.id, variable.name){ 
\end_layout

\begin_layout Plain Layout

#  names(x)[match(paste("X",0:7,sep=""),names(x), nomatch=0)] <- as.character(0:7
)   
\end_layout

\begin_layout Plain Layout

suppressWarnings(x <- melt(x, melt.id))   
\end_layout

\begin_layout Plain Layout

names(x)[names(x)=="result_variable"]<-variable.name   
\end_layout

\begin_layout Plain Layout

return(x) 
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

@
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

<<dataSetup, echo=TRUE, eval=TRUE, fig.height=7*1.4>>=
\end_layout

\begin_layout Plain Layout

suppressMessages(library(plyr))
\end_layout

\begin_layout Plain Layout

suppressMessages(library(ggplot2))
\end_layout

\begin_layout Plain Layout

suppressMessages(library(reshape))
\end_layout

\begin_layout Plain Layout

rec.data <- read.csv(file="data/Rec.csv", sep=";")
\end_layout

\begin_layout Plain Layout

dists.list <- emp.dists(rec.data)
\end_layout

\begin_layout Plain Layout

plot.in.chunks <- function(data, lines){
\end_layout

\begin_layout Plain Layout

	max.len <- length(levels(factor(data$code)))
\end_layout

\begin_layout Plain Layout

	i <- 1
\end_layout

\begin_layout Plain Layout

	while(i+lines-1 < max.len){
\end_layout

\begin_layout Plain Layout

		print(ggplot(subset(data,code%in%levels(factor(code))[i:(i+lines-1)]),aes(x=fa
ctor(resp),y=value,group=factor(paste(enc,posold)),colour=factor(enc)))+
\end_layout

\begin_layout Plain Layout

		geom_freqpoly(stat="identity")+
\end_layout

\begin_layout Plain Layout

		facet_grid(code+scale~posold)+
\end_layout

\begin_layout Plain Layout

		scale_y_continuous("Probability", limits=c(0,1)))
\end_layout

\begin_layout Plain Layout

		i <- i+lines
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

	print(ggplot(subset(data,code%in%levels(factor(code))[i:max.len]),aes(x=factor(r
esp),y=value,group=factor(paste(enc,posold)),colour=factor(enc)))+
\end_layout

\begin_layout Plain Layout

	geom_freqpoly(stat="identity")+
\end_layout

\begin_layout Plain Layout

	facet_grid(code+scale~posold)+
\end_layout

\begin_layout Plain Layout

	scale_y_continuous("Probability", limits=c(0,1)))
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

plot.in.chunks(dists.list[[1]][[1]], 4)
\end_layout

\begin_layout Plain Layout

plot.in.chunks(dists.list[[1]][[2]], 8)
\end_layout

\begin_layout Plain Layout

plot.in.chunks(dists.list[[2]][[1]], 4)
\end_layout

\begin_layout Plain Layout

plot.in.chunks(dists.list[[2]][[2]], 8)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
First, the individual probability distributions for each condition is calculated.
\end_layout

\begin_layout Section
Conclusions
\end_layout

\begin_layout Standard
...
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
printbibliography
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "MasterThesis"
options "plain"

\end_inset


\end_layout

\end_inset


\end_layout

\end_body
\end_document
